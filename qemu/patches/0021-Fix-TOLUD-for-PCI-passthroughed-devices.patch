From 2d7c35a4d7af621d98bfc4e639aac1ad76f55f8d Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Mateusz=20Pi=C3=B3rkowski?= <mati7337@protonmail.ch>
Date: Sat, 26 Mar 2022 03:06:35 +0100
Subject: [PATCH 21/21] Fix TOLUD for PCI passthroughed devices

---
 hw/i386/xen/xen-hvm.c | 73 ++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 72 insertions(+), 1 deletion(-)

diff --git a/hw/i386/xen/xen-hvm.c b/hw/i386/xen/xen-hvm.c
index f42621e674..2ed2feef11 100644
--- a/hw/i386/xen/xen-hvm.c
+++ b/hw/i386/xen/xen-hvm.c
@@ -112,6 +112,65 @@ qemu_irq *xen_interrupt_controller_init(void)
 
 /* Memory Ops */
 
+struct iomem_entry{
+    uint64_t addr_start;
+    uint64_t addr_end;
+    uint64_t name_len;
+    char *name;
+};
+
+int parse_iomem_entry(char *line, struct iomem_entry *entry)
+{
+    uint64_t pos = 0;
+
+    if (sscanf(line, "%llx-%llx : %lln", &entry->addr_start, &entry->addr_end, &pos) != 2) {
+        return -1;
+    }
+    entry->name = line + pos;
+    if (sscanf(line+pos, "%*s%lln\n", &entry->name_len) != 0) {
+        return -1;
+    }
+
+    return 0;
+}
+
+uint64_t get_min_pci_addr(void)
+{
+    FILE *iomem = fopen("/proc/iomem", "r");
+    if (iomem == NULL) {
+        return 0;
+    }
+
+    uint64_t iomem_line_bufsize = 128;
+    char *iomem_line = (char *)malloc(iomem_line_bufsize * sizeof(char));
+    if (iomem_line == NULL) {
+        fclose(iomem);
+        return 0;
+    }
+
+    uint64_t min_addr = 0;
+
+    while (getline(&iomem_line, &iomem_line_bufsize,iomem) != -1) {
+        struct iomem_entry entry;
+        if (parse_iomem_entry(iomem_line, &entry) != 0) {
+            continue;
+        }
+
+        uint64_t chars_match = 0;
+        if (sscanf(entry.name, "%*llx:%*llx:%*llx.%*llx%lln", &chars_match) != 0) {
+            break;
+        } else if (chars_match == entry.name_len) {
+            min_addr = entry.addr_start;
+            break;
+        }
+    }
+
+    free(iomem_line);
+    fclose(iomem);
+    return min_addr;
+}
+
+
 static void xen_ram_init(PCMachineState *pcms,
                          ram_addr_t ram_size, MemoryRegion **ram_memory_p)
 {
@@ -125,9 +184,21 @@ static void xen_ram_init(PCMachineState *pcms,
 
     /* Handle the machine opt max-ram-below-4g.  It is basically doing
      * min(xen limit, user limit).
+     *
+     * xen limit is calculated based on the min address of PCI devices
+     *
+     * TODO: hvmloader seems to relocate memory which overlaps with
+     * PCI addresses, but for some reason that doesn't work and it's
+     * required to lower max-ram-below-4g. Fixing that might solve the
+     * problem in a more elegant way.
      */
     if (!user_lowmem) {
-        user_lowmem = HVM_BELOW_4G_RAM_END; /* default */
+        uint64_t min_pci_addr = get_min_pci_addr();
+        if (min_pci_addr && min_pci_addr < HVM_BELOW_4G_RAM_END) {
+            user_lowmem = min_pci_addr;
+        } else {
+            user_lowmem = HVM_BELOW_4G_RAM_END;
+        }
     }
     if (HVM_BELOW_4G_RAM_END <= user_lowmem) {
         user_lowmem = HVM_BELOW_4G_RAM_END;
-- 
2.41.0

